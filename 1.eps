%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 772 591
%%LanguageLevel: 2
%%Creator: OriginLab Corporation
%%Title: (C:\Users\Dicky\Desktop\report_12\1.eps)
%%CreationDate: Sat Dec 23 22:29:46 2017
%%EndComments

/OriginLab::PSL1 128 dict dup begin def
/Save0 save def
%%BeginResource: procset OriginLab::PSL1
/wd{1 index where{pop pop pop}{bind def}ifelse}bind def
/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}wd
/selectfont{dup type/arraytype eq{exch findfont exch makefont setfont}{exch findfont exch scalefont setfont}ifelse}wd
/xshow{1 index length 0 le{}{currentpoint exch 3 index length 1 sub 0 exch 1 exch{dup 5 index exch 1 getinterval show 3 index exch get add 2 copy exch moveto}for pop pop}ifelse pop pop}wd
/glyphshow{matrix currentmatrix exch currentfont dup/FontMatrix get concat currentpoint translate
 dup/Metrics get 2 index get 0 4 2 roll gsave/CharProcs get exch 2 copy known not{pop/.notdef}if
 get exec fill grestore moveto setmatrix}wd
/grayimage/image load def/rgbtogray{cvx exec dup length 3 idiv 1 sub 0 exch 1 exch{dup 3 mul dup 3 index exch get 255 div .3 mul exch
 1 add dup 4 index exch get 255 div .59 mul exch 1 add 4 index exch get 255 div .11 mul add add
 255 mul dup 255 gt{255}if round cvi 2 index 3 1 roll put}for dup length 3 idiv 0 exch getinterval}bind def
/colorimage{0 setgray pop pop cvlit/rgbtogray cvx 2 packedarray cvx grayimage}wd
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/xd{cvx def}bd
/np/newpath ld/a/arc ld/m/moveto ld/l/lineto ld/c/curveto ld/rm/rmoveto ld/rl/rlineto ld/rc/rcurveto ld/cp/closepath ld/cpt/currentpoint ld
/tr/translate ld/sc/scale ld/ro/rotate ld/t/transform ld/it/itransform ld/dt/dtransform ld/idt/idtransform ld
/mtx/matrix ld/cmtx/currentmatrix ld/dmtx/defaultmatrix ld/smtx/setmatrix ld/catmtx/concatmatrix ld
/sw/setlinewidth ld/scap/setlinecap ld/sj/setlinejoin ld/sm/setmiterlimit ld/sd/setdash ld/rgb/setrgbcolor ld/crgb/currentrgbcolor ld/cmyk/setcmykcolor ld/gs/gsave ld/gr/grestore ld
/st/stroke ld/fi/fill ld/eofi/eofill ld/cl/clip ld/eocl/eoclip ld
/df/definefont ld/ff/findfont ld/sf/setfont ld/scf/scalefont ld/self/selectfont ld/cf/currentfont ld
/s/show ld/xs/xshow ld/gls/glyphshow ld/xgls{cpt 3 1 roll add exch 3 -1 roll gls m}bd
/cd/currentdict ld/i/index ld
/DrawBox{4 2 roll m 1 index 0 rl 0 exch rl neg 0 rl cp}bd
/plus.re { 6 { 3 index } repeat moveto 0 exch rlineto 0 rlineto pop pop neg 0 exch rlineto pop lineto closepath } def
/DrawBcc{4 2 roll m 2 copy 0 lt exch 0 lt xor{dup 0 exch rl exch 0 rl neg 0 exch rl}{exch dup 0 rl exch 0 exch rl neg 0 rl}ifelse cp}bd
/rectline{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBox}for pop}{DrawBox}ifelse}bd
/rectpath{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBcc}for pop}{DrawBcc}ifelse}bd
/pathproc{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall]cvx}bd
/L1img/image ld/L1idx[{0}
 {dup 7 and 3 1 roll -3 bitshift get exch 7 sub 1 mul bitshift  1 and}bind 1 index dup
 {dup 1 and 3 1 roll -1 bitshift get exch 1 sub 4 mul bitshift 15 and}bind 1 index dup dup
 {get}bind]def
/image{dup type/dicttype eq {dup/ImgCS get 0 get/Indexed eq}{false}ifelse
 {begin Width Height 8 ImageMatrix {rgb_string rgb_lookup
 cd/DataSource get dup type/filetype eq
 {mystring readstring pop}{exec}ifelse
 dup length 0 ne
 {L1idx BitsPerComponent get 0 1 Width 1 sub
 {3 copy exch exec exch 3 mul exch
 3 mul dup 5 index exch get exch 1 add dup 6 index exch get exch 1 add 6 index exch get
 7 index exch 4 index 2 add exch put 6 index exch 3 index 1 add exch put 5 index exch 2 index exch put pop
 }for pop pop pop }{pop pop pop ()}ifelse }false 3 colorimage end} {dup type/dicttype eq
 {{dup mark exch L1img pop pop}stopped{cleartomark begin Width Height BitsPerComponent ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }false 3 colorimage end} if}{L1img}ifelse}ifelse
 }bd
/L1imgmask/imagemask ld/imagemask{dup type/dicttype eq
 {{dup mark exch L1imgmask pop pop}stopped {cleartomark begin Width Height polarityflag ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }L1imgmask end}if}{L1imgmask}ifelse
 }bd
% Gradient function
/GradientStep 1 150 div def
/GradientStartRGB { /R1 exch def /G1 exch def /B1 exch def } def
/GradientEndRGB { /R2 exch def /G2 exch def /B2 exch def
/GradientSteps GradientLength GradientStep div def
/GradientRStep R2 R1 sub GradientSteps div def
/GradientGStep G2 G1 sub GradientSteps div def
/GradientBStep B2 B1 sub GradientSteps div def
} def
/GradientStepRGB { /R1 R1 GradientRStep add def
/G1 G1 GradientGStep add def
/B1 B1 GradientBStep add def
R1 G1 B1 setrgbcolor
} def
%%EndResource
/rectclip{np rectpath clip np}wd
/rectfill{gs np rectpath fi gr}wd
/rectstroke{gs np dup type/arraytype eq{dup length 6 eq}{false}ifelse{1 index type/arraytype eq{exch}{5 1 roll}ifelse rectline concat st}{rectline st}ifelse gr}wd
%%BeginResource: procset OriginLab::Image
/OriginLab::Image 32 dict dup begin
/BinProc{[currentfile mystring /readstring cvx /pop cvx] cvx bind}bd
/HexProc{[currentfile mystring /readhexstring cvx /pop cvx] cvx bind}bd
/Ascii85Proc{currentfile /ASCII85Decode filter}bd
/LZWA85{currentfile /ASCII85Decode filter /LZWDecode filter}bd
/ImgProcArray[/BinProc /HexProc /Ascii85Proc /LZWA85]def
/ImgDict{/ImgDict 16 dict def ImgDict dup begin /ImageType 1 def /MultipleDataSource false def end}bd
/L2Dec{{[1 0]}{[0 1]}ifelse}bd
/BegImg{ /Img_sv save def
 /ImgDir ed ImgProcArray exch get /ImgProc exch ld
 dup /polarityflag ed L2Dec /polarity ed /smoothflag ed
 tr /dx 2 index def /dy 1 index abs def sc
 string /mystring ed /bpc ed /ih ed /iw ed
 }bd
/EndImg {Img_sv restore}bd
/DoXImg{ /rgb_lookup ed /hival ed ImgDict dup begin
 [/Indexed /DeviceRGB hival rgb_lookup] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 bpc{2 mul}repeat 1 sub] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent bpc def
 /Interpolate smoothflag def
 end image}bd
/DoImg{ ImgDict dup begin
 [/DeviceRGB] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 0 1 0 1] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent 8 def
 /Interpolate smoothflag def
 end image}bd
end def
%%EndResource
/initmtx mtx cmtx def
%%BeginFont: /MC1_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC1_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2129] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 40/s40 put
Encoding 41/s41 put
Encoding 45/s45 put
Encoding 46/s46 put
Encoding 48/s48 put
Encoding 49/s49 put
Encoding 50/s50 put
Encoding 51/s51 put
Encoding 53/s53 put
Encoding 103/s103 put
Encoding 109/s109 put
Encoding 116/s116 put
/BoundingBoxes 14 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s40 [0 -434 682 1854] def
/s41 [0 -434 682 1854] def
/s45 [0 -434 682 1854] def
/s46 [0 -434 569 1854] def
/s48 [0 -434 1139 1854] def
/s49 [0 -434 1139 1854] def
/s50 [0 -434 1139 1854] def
/s51 [0 -434 1139 1854] def
/s53 [0 -434 1139 1854] def
/s103 [0 -434 1139 1854] def
/s109 [0 -434 1706 1854] def
/s116 [0 -434 569 1854] def
end
/Metrics 14 dict def
 Metrics begin
/s32 569 def
/s40 682 def
/s41 682 def
/s45 682 def
/s46 569 def
/s48 1139 def
/s49 1139 def
/s50 1139 def
/s51 1139 def
/s53 1139 def
/s103 1139 def
/s109 1706 def
/s116 569 def
end
/CharProcs 14 dict def
CharProcs begin
/.notdef {} def
/s40 {
479 -431 m
379.67 -305.67 295.67 -159 227 9 c
158.33 177 124 351 124 531 c
124 689.67 149.67 841.67 201 987 c
261 1155.67 353.67 1323.67 479 1491 c
608 1491 479 1491 608 1491 c
527.33 1352.33 474 1253.33 448 1194 c
407.33 1102 375.33 1006 352 906 c
323.33 781.33 309 656 309 530 c
309 209.33 408.67 -111 608 -431 c
479 -431 608 -431 479 -431 c
closepath } bind def
/s41 {
253 -431 m
124 -431 253 -431 124 -431 c
323.33 -111 423 209.33 423 530 c
423 655.33 408.67 779.67 380 903 c
357.33 1003 325.67 1099 285 1191 c
259 1251 205.33 1351 124 1491 c
253 1491 124 1491 253 1491 c
378.33 1323.67 471 1155.67 531 987 c
582.33 841.67 608 689.67 608 531 c
608 351 573.5 177 504.5 9 c
435.5 -159 351.67 -305.67 253 -431 c
closepath } bind def
/s45 {
65 440 m
65 621 65 440 65 621 c
618 621 65 621 618 621 c
618 440 618 621 618 440 c
65 440 618 440 65 440 c
closepath } bind def
/s46 {
186 0 m
186 205 186 0 186 205 c
391 205 186 205 391 205 c
391 0 391 205 391 0 c
186 0 391 0 186 0 c
closepath } bind def
/s48 {
85 723 m
85 896.33 102.83 1035.83 138.5 1141.5 c
174.17 1247.17 227.17 1328.67 297.5 1386 c
367.83 1443.33 456.33 1472 563 1472 c
641.67 1472 710.67 1456.17 770 1424.5 c
829.33 1392.83 878.33 1347.17 917 1287.5 c
955.67 1227.83 986 1155.17 1008 1069.5 c
1030 983.83 1041 868.33 1041 723 c
1041 551 1023.33 412.17 988 306.5 c
952.67 200.83 899.83 119.17 829.5 61.5 c
759.17 3.83 670.33 -25 563 -25 c
421.67 -25 310.67 25.67 230 127 c
133.33 249 85 447.67 85 723 c
closepath 270 723 m
270 482.33 298.17 322.17 354.5 242.5 c
410.83 162.83 480.33 123 563 123 c
645.67 123 715.17 163 771.5 243 c
827.83 323 856 483 856 723 c
856 964.33 827.83 1124.67 771.5 1204 c
715.17 1283.33 645 1323 561 1323 c
478.33 1323 412.33 1288 363 1218 c
301 1128.67 270 963.67 270 723 c
closepath } bind def
/s49 {
763 0 m
583 0 763 0 583 0 c
583 1147 583 0 583 1147 c
539.67 1105.67 482.83 1064.33 412.5 1023 c
342.17 981.67 279 950.67 223 930 c
223 1104 223 930 223 1104 c
323.67 1151.33 411.67 1208.67 487 1276 c
562.33 1343.33 615.67 1408.67 647 1472 c
763 1472 647 1472 763 1472 c
763 0 763 1472 763 0 c
closepath } bind def
/s50 {
1031 173 m
1031 0 1031 173 1031 0 c
62 0 1031 0 62 0 c
60.67 43.33 67.67 85 83 125 c
107.67 191 147.17 256 201.5 320 c
255.83 384 334.33 458 437 542 c
596.33 672.67 704 776.17 760 852.5 c
816 928.83 844 1001 844 1069 c
844 1140.33 818.5 1200.5 767.5 1249.5 c
716.5 1298.5 650 1323 568 1323 c
481.33 1323 412 1297 360 1245 c
308 1193 281.67 1121 281 1029 c
96 1048 281 1029 96 1048 c
108.67 1186 156.33 1291.17 239 1363.5 c
321.67 1435.83 432.67 1472 572 1472 c
712.67 1472 824 1433 906 1355 c
988 1277 1029 1180.33 1029 1065 c
1029 1006.33 1017 948.67 993 892 c
969 835.33 929.17 775.67 873.5 713 c
817.83 650.33 725.33 564.33 596 455 c
488 364.33 418.67 302.83 388 270.5 c
357.33 238.17 332 205.67 312 173 c
1031 173 312 173 1031 173 c
closepath } bind def
/s51 {
86 387 m
266 411 86 387 266 411 c
286.67 309 321.83 235.5 371.5 190.5 c
421.17 145.5 481.67 123 553 123 c
637.67 123 709.17 152.33 767.5 211 c
825.83 269.67 855 342.33 855 429 c
855 511.67 828 579.83 774 633.5 c
720 687.17 651.33 714 568 714 c
534 714 491.67 707.33 441 694 c
461 852 441 694 461 852 c
473 850.67 482.67 850 490 850 c
566.67 850 635.67 870 697 910 c
758.33 950 789 1011.67 789 1095 c
789 1161 766.67 1215.67 722 1259 c
677.33 1302.33 619.67 1324 549 1324 c
479 1324 420.67 1302 374 1258 c
327.33 1214 297.33 1148 284 1060 c
104 1092 284 1060 104 1092 c
126 1212.67 176 1306.17 254 1372.5 c
332 1438.83 429 1472 545 1472 c
625 1472 698.67 1454.83 766 1420.5 c
833.33 1386.17 884.83 1339.33 920.5 1280 c
956.17 1220.67 974 1157.67 974 1091 c
974 1027.67 957 970 923 918 c
889 866 838.67 824.67 772 794 c
858.67 774 926 732.5 974 669.5 c
1022 606.5 1046 527.67 1046 433 c
1046 305 999.33 196.5 906 107.5 c
812.67 18.5 694.67 -26 552 -26 c
423.33 -26 316.5 12.33 231.5 89 c
146.5 165.67 98 265 86 387 c
closepath } bind def
/s53 {
85 384 m
274 400 85 384 274 400 c
288 308 320.5 238.83 371.5 192.5 c
422.5 146.17 484 123 556 123 c
642.67 123 716 155.67 776 221 c
836 286.33 866 373 866 481 c
866 583.67 837.17 664.67 779.5 724 c
721.83 783.33 646.33 813 553 813 c
495 813 442.67 799.83 396 773.5 c
349.33 747.17 312.67 713 286 671 c
117 693 286 671 117 693 c
259 1446 117 693 259 1446 c
988 1446 259 1446 988 1446 c
988 1274 988 1446 988 1274 c
403 1274 988 1274 403 1274 c
324 880 403 1274 324 880 c
412 941.33 504.33 972 601 972 c
729 972 837 927.67 925 839 c
1013 750.33 1057 636.33 1057 497 c
1057 364.33 1018.33 249.67 941 153 c
847 34.33 718.67 -25 556 -25 c
422.67 -25 313.83 12.33 229.5 87 c
145.17 161.67 97 260.67 85 384 c
closepath } bind def
/s103 {
102 -88 m
277 -114 102 -88 277 -114 c
284.33 -168 304.67 -207.33 338 -232 c
382.67 -265.33 443.67 -282 521 -282 c
604.33 -282 668.67 -265.33 714 -232 c
759.33 -198.67 790 -152 806 -92 c
815.33 -55.33 819.67 21.67 819 139 c
740.33 46.33 642.33 0 525 0 c
379 0 266 52.67 186 158 c
106 263.33 66 389.67 66 537 c
66 638.33 84.33 731.83 121 817.5 c
157.67 903.17 210.83 969.33 280.5 1016 c
350.17 1062.67 432 1086 526 1086 c
651.33 1086 754.67 1035.33 836 934 c
836 1062 836 934 836 1062 c
1002 1062 836 1062 1002 1062 c
1002 144 1002 1062 1002 144 c
1002 -21.33 985.17 -138.5 951.5 -207.5 c
917.83 -276.5 864.5 -331 791.5 -371 c
718.5 -411 628.67 -431 522 -431 c
395.33 -431 293 -402.5 215 -345.5 c
137 -288.5 99.33 -202.67 102 -88 c
closepath 251 550 m
251 410.67 278.67 309 334 245 c
389.33 181 458.67 149 542 149 c
624.67 149 694 180.83 750 244.5 c
806 308.17 834 408 834 544 c
834 674 805.17 772 747.5 838 c
689.83 904 620.33 937 539 937 c
459 937 391 904.5 335 839.5 c
279 774.5 251 678 251 550 c
closepath } bind def
/s109 {
135 0 m
135 1062 135 0 135 1062 c
296 1062 135 1062 296 1062 c
296 913 296 1062 296 913 c
329.33 965 373.67 1006.83 429 1038.5 c
484.33 1070.17 547.33 1086 618 1086 c
696.67 1086 761.17 1069.67 811.5 1037 c
861.83 1004.33 897.33 958.67 918 900 c
1002 1024 1111.33 1086 1246 1086 c
1351.33 1086 1432.33 1056.83 1489 998.5 c
1545.67 940.17 1574 850.33 1574 729 c
1574 0 1574 729 1574 0 c
1395 0 1574 0 1395 0 c
1395 669 1395 0 1395 669 c
1395 741 1389.17 792.83 1377.5 824.5 c
1365.83 856.17 1344.67 881.67 1314 901 c
1283.33 920.33 1247.33 930 1206 930 c
1131.33 930 1069.33 905.17 1020 855.5 c
970.67 805.83 946 726.33 946 617 c
946 0 946 617 946 0 c
766 0 946 0 766 0 c
766 690 766 0 766 690 c
766 770 751.33 830 722 870 c
692.67 910 644.67 930 578 930 c
527.33 930 480.5 916.67 437.5 890 c
394.5 863.33 363.33 824.33 344 773 c
324.67 721.67 315 647.67 315 551 c
315 0 315 551 315 0 c
135 0 315 0 135 0 c
closepath } bind def
/s116 {
528 161 m
554 2 528 161 554 2 c
503.33 -8.67 458 -14 418 -14 c
352.67 -14 302 -3.67 266 17 c
230 37.67 204.67 64.83 190 98.5 c
175.33 132.17 168 203 168 311 c
168 922 168 311 168 922 c
36 922 168 922 36 922 c
36 1062 36 922 36 1062 c
168 1062 36 1062 168 1062 c
168 1325 168 1062 168 1325 c
347 1433 168 1325 347 1433 c
347 1062 347 1433 347 1062 c
528 1062 347 1062 528 1062 c
528 922 528 1062 528 922 c
347 922 528 922 347 922 c
347 301 347 922 347 301 c
347 249.67 350.17 216.67 356.5 202 c
362.83 187.33 373.17 175.67 387.5 167 c
401.83 158.33 422.33 154 449 154 c
469 154 495.33 156.33 528 161 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC1_Arial exch definefont pop
%%EndFont
%%BeginFont: /MC2_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC2_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2129] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 40/s40 put
Encoding 41/s41 put
Encoding 45/s45 put
Encoding 50/s50 put
Encoding 115/s115 put
Encoding 116/s116 put
/BoundingBoxes 8 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s40 [0 -434 682 1854] def
/s41 [0 -434 682 1854] def
/s45 [0 -434 682 1854] def
/s50 [0 -434 1139 1854] def
/s115 [0 -434 1024 1854] def
/s116 [0 -434 569 1854] def
end
/Metrics 8 dict def
 Metrics begin
/s32 569 def
/s40 682 def
/s41 682 def
/s45 682 def
/s50 1139 def
/s115 1024 def
/s116 569 def
end
/CharProcs 8 dict def
CharProcs begin
/.notdef {} def
/s40 {
479 -431 m
379.67 -305.67 295.67 -159 227 9 c
158.33 177 124 351 124 531 c
124 689.67 149.67 841.67 201 987 c
261 1155.67 353.67 1323.67 479 1491 c
608 1491 479 1491 608 1491 c
527.33 1352.33 474 1253.33 448 1194 c
407.33 1102 375.33 1006 352 906 c
323.33 781.33 309 656 309 530 c
309 209.33 408.67 -111 608 -431 c
479 -431 608 -431 479 -431 c
closepath } bind def
/s41 {
253 -431 m
124 -431 253 -431 124 -431 c
323.33 -111 423 209.33 423 530 c
423 655.33 408.67 779.67 380 903 c
357.33 1003 325.67 1099 285 1191 c
259 1251 205.33 1351 124 1491 c
253 1491 124 1491 253 1491 c
378.33 1323.67 471 1155.67 531 987 c
582.33 841.67 608 689.67 608 531 c
608 351 573.5 177 504.5 9 c
435.5 -159 351.67 -305.67 253 -431 c
closepath } bind def
/s45 {
65 440 m
65 621 65 440 65 621 c
618 621 65 621 618 621 c
618 440 618 621 618 440 c
65 440 618 440 65 440 c
closepath } bind def
/s50 {
1031 173 m
1031 0 1031 173 1031 0 c
62 0 1031 0 62 0 c
60.67 43.33 67.67 85 83 125 c
107.67 191 147.17 256 201.5 320 c
255.83 384 334.33 458 437 542 c
596.33 672.67 704 776.17 760 852.5 c
816 928.83 844 1001 844 1069 c
844 1140.33 818.5 1200.5 767.5 1249.5 c
716.5 1298.5 650 1323 568 1323 c
481.33 1323 412 1297 360 1245 c
308 1193 281.67 1121 281 1029 c
96 1048 281 1029 96 1048 c
108.67 1186 156.33 1291.17 239 1363.5 c
321.67 1435.83 432.67 1472 572 1472 c
712.67 1472 824 1433 906 1355 c
988 1277 1029 1180.33 1029 1065 c
1029 1006.33 1017 948.67 993 892 c
969 835.33 929.17 775.67 873.5 713 c
817.83 650.33 725.33 564.33 596 455 c
488 364.33 418.67 302.83 388 270.5 c
357.33 238.17 332 205.67 312 173 c
1031 173 312 173 1031 173 c
closepath } bind def
/s115 {
63 317 m
241 345 63 317 241 345 c
251 273.67 278.83 219 324.5 181 c
370.17 143 434 124 516 124 c
598.67 124 660 140.83 700 174.5 c
740 208.17 760 247.67 760 293 c
760 333.67 742.33 365.67 707 389 c
682.33 405 621 425.33 523 450 c
391 483.33 299.5 512.17 248.5 536.5 c
197.5 560.83 158.83 594.5 132.5 637.5 c
106.17 680.5 93 728 93 780 c
93 827.33 103.83 871.17 125.5 911.5 c
147.17 951.83 176.67 985.33 214 1012 c
242 1032.67 280.17 1050.17 328.5 1064.5 c
376.83 1078.83 428.67 1086 484 1086 c
567.33 1086 640.5 1074 703.5 1050 c
766.5 1026 813 993.5 843 952.5 c
873 911.5 893.67 856.67 905 788 c
729 764 905 788 729 764 c
721 818.67 697.83 861.33 659.5 892 c
621.17 922.67 567 938 497 938 c
414.33 938 355.33 924.33 320 897 c
284.67 869.67 267 837.67 267 801 c
267 777.67 274.33 756.67 289 738 c
303.67 718.67 326.67 702.67 358 690 c
376 683.33 429 668 517 644 c
644.33 610 733.17 582.17 783.5 560.5 c
833.83 538.83 873.33 507.33 902 466 c
930.67 424.67 945 373.33 945 312 c
945 252 927.5 195.5 892.5 142.5 c
857.5 89.5 807 48.5 741 19.5 c
675 -9.5 600.33 -24 517 -24 c
379 -24 273.83 4.67 201.5 62 c
129.17 119.33 83 204.33 63 317 c
closepath } bind def
/s116 {
528 161 m
554 2 528 161 554 2 c
503.33 -8.67 458 -14 418 -14 c
352.67 -14 302 -3.67 266 17 c
230 37.67 204.67 64.83 190 98.5 c
175.33 132.17 168 203 168 311 c
168 922 168 311 168 922 c
36 922 168 922 36 922 c
36 1062 36 922 36 1062 c
168 1062 36 1062 168 1062 c
168 1325 168 1062 168 1325 c
347 1433 168 1325 347 1433 c
347 1062 347 1433 347 1062 c
528 1062 347 1062 528 1062 c
528 922 528 1062 528 922 c
347 922 528 922 347 922 c
347 301 347 922 347 301 c
347 249.67 350.17 216.67 356.5 202 c
362.83 187.33 373.17 175.67 387.5 167 c
401.83 158.33 422.33 154 449 154 c
469 154 495.33 156.33 528 161 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC2_Arial exch definefont pop
%%EndFont
/clipproc{clippath{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall}stopped
{cleartomark[pathbbox exch 3 i sub exch 2 i sub/rectpath cvx}if]np}bd
/iclmtx mtx cmtx def/iclpath clipproc xd/clinit{pathproc initclip np iclpath cl np exec}bd
/clmove{pathproc 3 1 roll clippath pathproc 2 i neg 2 i neg tr initclip np exec cl tr np exec}bd
/clrect[gs np iclpath{pathbbox}stopped{0 0 771.85 590.88 }if gr]def
/cloper{mtx cmtx iclmtx smtx exch exec smtx}bd
/cland{{exch cvx exec}cloper}bd
/clcopy{{exch clinit cvx exec}cloper}bd
/cldiff{{exch pathbbox 4 -1 roll clrect 0 get 2 copy gt{exch}if pop 4 1 roll
 3 -1 roll clrect 1 get 2 copy gt{exch}if pop 3 1 roll
 2 -1 roll clrect 2 get 2 copy lt{exch}if pop 2 1 roll
 1 -1 roll clrect 3 get 2 copy lt{exch}if pop 1 1 roll
 exch 3 i sub exch 2 i sub rectpath cvx exec}cloper}bd
/icl{{clinit}cloper}bd
0.891235 0.891231 sc

/initmtx mtx cmtx def
initmtx smtx
[1.0000 0.0000 0.0000 1.0000 0.0000 0.0000 ] concat
 [0.269291 -0 0 -0.269291 0 662.995] concat
gs
575 2052 m
2770 2052 l
7 sw
1 sj
1 scap
st
575 2052 m
575 2069 l
st
889 2052 m
889 2069 l
st
1202 2052 m
1202 2069 l
st
1516 2052 m
1516 2069 l
st
1829 2052 m
1829 2069 l
st
2143 2052 m
2143 2069 l
st
2456 2052 m
2456 2069 l
st
2770 2052 m
2770 2069 l
st
732 2052 m
732 2086 l
st
1045 2052 m
1045 2086 l
st
1359 2052 m
1359 2086 l
st
1673 2052 m
1673 2086 l
st
1986 2052 m
1986 2086 l
st
2300 2052 m
2300 2086 l
st
2613 2052 m
2613 2086 l
st
575 2052 m
575 285 l
st
575 1926 m
558 1926 l
st
575 1673 m
558 1673 l
st
575 1421 m
558 1421 l
st
575 1169 m
558 1169 l
st
575 916 m
558 916 l
st
575 664 m
558 664 l
st
575 411 m
558 411 l
st
575 2052 m
541 2052 l
st
575 1800 m
541 1800 l
st
575 1547 m
541 1547 l
st
575 1295 m
541 1295 l
st
575 1042 m
541 1042 l
st
575 790 m
541 790 l
st
575 537 m
541 537 l
st
575 285 m
541 285 l
st
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 711 -2169 m
(5)[42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1003 -2169 m
(10)[42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1317 -2169 m
(15)[42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1631 -2169 m
(20)[42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1944 -2169 m
(25)[42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 2258 -2169 m
(30)[42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 2571 -2169 m
(35)[42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 328 -2075 m
(0.000)[42 21 42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 328 -1823 m
(0.005)[42 21 42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 328 -1570 m
(0.010)[42 21 42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 328 -1318 m
(0.015)[42 21 42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 328 -1065 m
(0.020)[42 21 42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 328 -813 m
(0.025)[42 21 42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 328 -560 m
(0.030)[42 21 42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 328 -308 m
(0.035)[42 21 42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
pathproc 575 285 2196 1768 np rectpath
/eocl cland
np exec
709 1868 m
753 1912 l
3 sw
st
753 1868 m
709 1912 l
st
1023 1623 m
1067 1667 l
st
1067 1623 m
1023 1667 l
st
1335 1396 m
1379 1440 l
st
1379 1396 m
1335 1440 l
st
1649 1132 m
1693 1176 l
st
1693 1132 m
1649 1176 l
st
1964 893 m
2008 937 l
st
2008 893 m
1964 937 l
st
2278 628 m
2322 672 l
st
2322 628 m
2278 672 l
st
2591 428 m
2635 472 l
st
2635 428 m
2591 472 l
st
gr
gs
pathproc 575 285 2196 1768 np rectpath
/eocl cland
np exec
731 1890 m
731 1890 m
733 1889 l
735 1887 l
737 1886 l
739 1884 l
741 1883 l
742 1881 l
744 1880 l
746 1878 l
748 1877 l
750 1875 l
752 1874 l
754 1872 l
756 1871 l
758 1870 l
759 1868 l
761 1867 l
763 1865 l
765 1864 l
767 1862 l
769 1861 l
771 1859 l
773 1858 l
774 1856 l
776 1855 l
778 1853 l
780 1852 l
782 1851 l
784 1849 l
786 1848 l
788 1846 l
790 1845 l
791 1843 l
793 1842 l
795 1840 l
797 1839 l
799 1837 l
801 1836 l
803 1834 l
805 1833 l
806 1832 l
808 1830 l
810 1829 l
812 1827 l
814 1826 l
816 1824 l
818 1823 l
820 1821 l
822 1820 l
823 1818 l
825 1817 l
827 1815 l
829 1814 l
831 1813 l
833 1811 l
835 1810 l
837 1808 l
839 1807 l
840 1805 l
842 1804 l
844 1802 l
846 1801 l
848 1799 l
850 1798 l
852 1796 l
854 1795 l
855 1794 l
857 1792 l
859 1791 l
861 1789 l
863 1788 l
865 1786 l
867 1785 l
869 1783 l
871 1782 l
872 1780 l
874 1779 l
876 1777 l
878 1776 l
880 1775 l
882 1773 l
884 1772 l
886 1770 l
887 1769 l
889 1767 l
891 1766 l
893 1764 l
895 1763 l
897 1761 l
899 1760 l
901 1759 l
903 1757 l
904 1756 l
906 1754 l
908 1753 l
910 1751 l
912 1750 l
914 1748 l
916 1747 l
918 1745 l
919 1744 l
921 1742 l
923 1741 l
925 1740 l
927 1738 l
929 1737 l
931 1735 l
933 1734 l
935 1732 l
936 1731 l
938 1729 l
940 1728 l
942 1726 l
944 1725 l
946 1723 l
948 1722 l
950 1721 l
952 1719 l
953 1718 l
955 1716 l
957 1715 l
959 1713 l
961 1712 l
963 1710 l
965 1709 l
967 1707 l
968 1706 l
970 1704 l
972 1703 l
974 1702 l
976 1700 l
978 1699 l
980 1697 l
982 1696 l
984 1694 l
985 1693 l
987 1691 l
989 1690 l
991 1688 l
993 1687 l
995 1685 l
997 1684 l
999 1683 l
1000 1681 l
1002 1680 l
1004 1678 l
1006 1677 l
1008 1675 l
1010 1674 l
1012 1672 l
1014 1671 l
1016 1669 l
1017 1668 l
1019 1666 l
1021 1665 l
1023 1664 l
1025 1662 l
1027 1661 l
1029 1659 l
1031 1658 l
1032 1656 l
1034 1655 l
1036 1653 l
1038 1652 l
1040 1650 l
1042 1649 l
1044 1647 l
1046 1646 l
1048 1645 l
1049 1643 l
1051 1642 l
1053 1640 l
1055 1639 l
1057 1637 l
1059 1636 l
1061 1634 l
1063 1633 l
1065 1631 l
1066 1630 l
1068 1628 l
1070 1627 l
1072 1626 l
1074 1624 l
1076 1623 l
1078 1621 l
1080 1620 l
1081 1618 l
1083 1617 l
1085 1615 l
1087 1614 l
1089 1612 l
1091 1611 l
1093 1609 l
1095 1608 l
1097 1607 l
1098 1605 l
1100 1604 l
1102 1602 l
1104 1601 l
1106 1599 l
1108 1598 l
1110 1596 l
1112 1595 l
1113 1593 l
1115 1592 l
1117 1590 l
1119 1589 l
1121 1588 l
1123 1586 l
1125 1585 l
1127 1583 l
1129 1582 l
1130 1580 l
1132 1579 l
1134 1577 l
1136 1576 l
1138 1574 l
1140 1573 l
1142 1572 l
1144 1570 l
1145 1569 l
1147 1567 l
1149 1566 l
1151 1564 l
1153 1563 l
1155 1561 l
1157 1560 l
1159 1558 l
1161 1557 l
1162 1555 l
1164 1554 l
1166 1553 l
1168 1551 l
1170 1550 l
1172 1548 l
1174 1547 l
1176 1545 l
1178 1544 l
1179 1542 l
1181 1541 l
1183 1539 l
1185 1538 l
1187 1536 l
1189 1535 l
1191 1534 l
1193 1532 l
1194 1531 l
1196 1529 l
1198 1528 l
1200 1526 l
1202 1525 l
1204 1523 l
1206 1522 l
1208 1520 l
1210 1519 l
1211 1517 l
1213 1516 l
1215 1515 l
1217 1513 l
1219 1512 l
1221 1510 l
1223 1509 l
1225 1507 l
1226 1506 l
1228 1504 l
1230 1503 l
1232 1501 l
1234 1500 l
1236 1498 l
1238 1497 l
1240 1496 l
1242 1494 l
1243 1493 l
1245 1491 l
1247 1490 l
1249 1488 l
1251 1487 l
1253 1485 l
1255 1484 l
1257 1482 l
1258 1481 l
1260 1479 l
1262 1478 l
1264 1477 l
1266 1475 l
1268 1474 l
1270 1472 l
1272 1471 l
1274 1469 l
1275 1468 l
1277 1466 l
1279 1465 l
1281 1463 l
1283 1462 l
1285 1460 l
1287 1459 l
1289 1458 l
1291 1456 l
1292 1455 l
1294 1453 l
1296 1452 l
1298 1450 l
1300 1449 l
1302 1447 l
1304 1446 l
1306 1444 l
1307 1443 l
1309 1441 l
1311 1440 l
1313 1439 l
1315 1437 l
1317 1436 l
1319 1434 l
1321 1433 l
1323 1431 l
1324 1430 l
1326 1428 l
1328 1427 l
1330 1425 l
1332 1424 l
1334 1422 l
1336 1421 l
1338 1420 l
1339 1418 l
1341 1417 l
1343 1415 l
1345 1414 l
1347 1412 l
1349 1411 l
1351 1409 l
1353 1408 l
1355 1406 l
1356 1405 l
1358 1404 l
1360 1402 l
1362 1401 l
1364 1399 l
1366 1398 l
1368 1396 l
1370 1395 l
1371 1393 l
1373 1392 l
1375 1390 l
1377 1389 l
1379 1387 l
1381 1386 l
1383 1385 l
1385 1383 l
1387 1382 l
1388 1380 l
1390 1379 l
1392 1377 l
1394 1376 l
1396 1374 l
1398 1373 l
1400 1371 l
1402 1370 l
1404 1368 l
1405 1367 l
1407 1366 l
1409 1364 l
1411 1363 l
1413 1361 l
1415 1360 l
1417 1358 l
1419 1357 l
1420 1355 l
1422 1354 l
1424 1352 l
1426 1351 l
1428 1349 l
1430 1348 l
1432 1347 l
1434 1345 l
1436 1344 l
1437 1342 l
1439 1341 l
1441 1339 l
1443 1338 l
1445 1336 l
1447 1335 l
1449 1333 l
1451 1332 l
1452 1330 l
1454 1329 l
1456 1328 l
1458 1326 l
1460 1325 l
1462 1323 l
1464 1322 l
1466 1320 l
1468 1319 l
1469 1317 l
1471 1316 l
1473 1314 l
1475 1313 l
1477 1311 l
1479 1310 l
1481 1309 l
1483 1307 l
1484 1306 l
1486 1304 l
1488 1303 l
1490 1301 l
1492 1300 l
1494 1298 l
1496 1297 l
1498 1295 l
1500 1294 l
1501 1292 l
1503 1291 l
1505 1290 l
1507 1288 l
1509 1287 l
1511 1285 l
1513 1284 l
1515 1282 l
1516 1281 l
1518 1279 l
1520 1278 l
1522 1276 l
1524 1275 l
1526 1273 l
1528 1272 l
1530 1271 l
1532 1269 l
1533 1268 l
1535 1266 l
1537 1265 l
1539 1263 l
1541 1262 l
1543 1260 l
1545 1259 l
1547 1257 l
1549 1256 l
1550 1254 l
1552 1253 l
1554 1252 l
1556 1250 l
1558 1249 l
1560 1247 l
1562 1246 l
1564 1244 l
1565 1243 l
1567 1241 l
1569 1240 l
1571 1238 l
1573 1237 l
1575 1236 l
1577 1234 l
1579 1233 l
1581 1231 l
1582 1230 l
1584 1228 l
1586 1227 l
1588 1225 l
1590 1224 l
1592 1222 l
1594 1221 l
1596 1219 l
1597 1218 l
1599 1217 l
1601 1215 l
1603 1214 l
1605 1212 l
1607 1211 l
1609 1209 l
1611 1208 l
1613 1206 l
1614 1205 l
1616 1203 l
1618 1202 l
1620 1200 l
1622 1199 l
1624 1198 l
1626 1196 l
1628 1195 l
1629 1193 l
1631 1192 l
1633 1190 l
1635 1189 l
1637 1187 l
1639 1186 l
1641 1184 l
1643 1183 l
1645 1181 l
1646 1180 l
1648 1179 l
1650 1177 l
1652 1176 l
1654 1174 l
1656 1173 l
1658 1171 l
1660 1170 l
1662 1168 l
1663 1167 l
1665 1165 l
1667 1164 l
1669 1162 l
1671 1161 l
1673 1160 l
1675 1158 l
1677 1157 l
1678 1155 l
1680 1154 l
1682 1152 l
1684 1151 l
1686 1149 l
1688 1148 l
1690 1146 l
1692 1145 l
1694 1143 l
1695 1142 l
1697 1141 l
1699 1139 l
1701 1138 l
1703 1136 l
1705 1135 l
1707 1133 l
1709 1132 l
1710 1130 l
1712 1129 l
1714 1127 l
1716 1126 l
1718 1124 l
1720 1123 l
1722 1122 l
1724 1120 l
1726 1119 l
1727 1117 l
1729 1116 l
1731 1114 l
1733 1113 l
1735 1111 l
1737 1110 l
1739 1108 l
1741 1107 l
1742 1105 l
1744 1104 l
1746 1103 l
1748 1101 l
1750 1100 l
1752 1098 l
1754 1097 l
1756 1095 l
1758 1094 l
1759 1092 l
1761 1091 l
1763 1089 l
1765 1088 l
1767 1086 l
1769 1085 l
1771 1084 l
1773 1082 l
1775 1081 l
1776 1079 l
1778 1078 l
1780 1076 l
1782 1075 l
1784 1073 l
1786 1072 l
1788 1070 l
1790 1069 l
1791 1067 l
1793 1066 l
1795 1065 l
1797 1063 l
1799 1062 l
1801 1060 l
1803 1059 l
1805 1057 l
1807 1056 l
1808 1054 l
1810 1053 l
1812 1051 l
1814 1050 l
1816 1049 l
1818 1047 l
1820 1046 l
1822 1044 l
1823 1043 l
1825 1041 l
1827 1040 l
1829 1038 l
1831 1037 l
1833 1035 l
1835 1034 l
1837 1032 l
1839 1031 l
1840 1030 l
1842 1028 l
1844 1027 l
1846 1025 l
1848 1024 l
1850 1022 l
1852 1021 l
1854 1019 l
1855 1018 l
1857 1016 l
1859 1015 l
1861 1013 l
1863 1012 l
1865 1011 l
1867 1009 l
1869 1008 l
1871 1006 l
1872 1005 l
1874 1003 l
1876 1002 l
1878 1000 l
1880 999 l
1882 997 l
1884 996 l
1886 994 l
1888 993 l
1889 992 l
1891 990 l
1893 989 l
1895 987 l
1897 986 l
1899 984 l
1901 983 l
1903 981 l
1904 980 l
1906 978 l
1908 977 l
1910 975 l
1912 974 l
1914 973 l
1916 971 l
1918 970 l
1920 968 l
1921 967 l
1923 965 l
1925 964 l
1927 962 l
1929 961 l
1931 959 l
1933 958 l
1935 956 l
1936 955 l
1938 954 l
1940 952 l
1942 951 l
1944 949 l
1946 948 l
1948 946 l
1950 945 l
1952 943 l
1953 942 l
1955 940 l
1957 939 l
1959 937 l
1961 936 l
1963 935 l
1965 933 l
1967 932 l
1968 930 l
1970 929 l
1972 927 l
1974 926 l
1976 924 l
1978 923 l
1980 921 l
1982 920 l
1984 918 l
1985 917 l
1987 916 l
1989 914 l
1991 913 l
1993 911 l
1995 910 l
1997 908 l
1999 907 l
2001 905 l
2002 904 l
2004 902 l
2006 901 l
2008 899 l
2010 898 l
2012 897 l
2014 895 l
2016 894 l
2017 892 l
2019 891 l
2021 889 l
2023 888 l
2025 886 l
2027 885 l
2029 883 l
2031 882 l
2033 881 l
2034 879 l
2036 878 l
2038 876 l
2040 875 l
2042 873 l
2044 872 l
2046 870 l
2048 869 l
3 sw
st
2048 869 m
2049 867 l
2051 866 l
2053 864 l
2055 863 l
2057 862 l
2059 860 l
2061 859 l
2063 857 l
2065 856 l
2066 854 l
2068 853 l
2070 851 l
2072 850 l
2074 848 l
2076 847 l
2078 845 l
2080 844 l
2081 843 l
2083 841 l
2085 840 l
2087 838 l
2089 837 l
2091 835 l
2093 834 l
2095 832 l
2097 831 l
2098 829 l
2100 828 l
2102 826 l
2104 825 l
2106 824 l
2108 822 l
2110 821 l
2112 819 l
2114 818 l
2115 816 l
2117 815 l
2119 813 l
2121 812 l
2123 810 l
2125 809 l
2127 807 l
2129 806 l
2130 805 l
2132 803 l
2134 802 l
2136 800 l
2138 799 l
2140 797 l
2142 796 l
2144 794 l
2146 793 l
2147 791 l
2149 790 l
2151 788 l
2153 787 l
2155 786 l
2157 784 l
2159 783 l
2161 781 l
2162 780 l
2164 778 l
2166 777 l
2168 775 l
2170 774 l
2172 772 l
2174 771 l
2176 769 l
2178 768 l
2179 767 l
2181 765 l
2183 764 l
2185 762 l
2187 761 l
2189 759 l
2191 758 l
2193 756 l
2194 755 l
2196 753 l
2198 752 l
2200 750 l
2202 749 l
2204 748 l
2206 746 l
2208 745 l
2210 743 l
2211 742 l
2213 740 l
2215 739 l
2217 737 l
2219 736 l
2221 734 l
2223 733 l
2225 731 l
2227 730 l
2228 729 l
2230 727 l
2232 726 l
2234 724 l
2236 723 l
2238 721 l
2240 720 l
2242 718 l
2243 717 l
2245 715 l
2247 714 l
2249 713 l
2251 711 l
2253 710 l
2255 708 l
2257 707 l
2259 705 l
2260 704 l
2262 702 l
2264 701 l
2266 699 l
2268 698 l
2270 696 l
2272 695 l
2274 694 l
2275 692 l
2277 691 l
2279 689 l
2281 688 l
2283 686 l
2285 685 l
2287 683 l
2289 682 l
2291 680 l
2292 679 l
2294 677 l
2296 676 l
2298 675 l
2300 673 l
2302 672 l
2304 670 l
2306 669 l
2307 667 l
2309 666 l
2311 664 l
2313 663 l
2315 661 l
2317 660 l
2319 658 l
2321 657 l
2323 656 l
2324 654 l
2326 653 l
2328 651 l
2330 650 l
2332 648 l
2334 647 l
2336 645 l
2338 644 l
2340 642 l
2341 641 l
2343 639 l
2345 638 l
2347 637 l
2349 635 l
2351 634 l
2353 632 l
2355 631 l
2356 629 l
2358 628 l
2360 626 l
2362 625 l
2364 623 l
2366 622 l
2368 620 l
2370 619 l
2372 618 l
2373 616 l
2375 615 l
2377 613 l
2379 612 l
2381 610 l
2383 609 l
2385 607 l
2387 606 l
2388 604 l
2390 603 l
2392 601 l
2394 600 l
2396 599 l
2398 597 l
2400 596 l
2402 594 l
2404 593 l
2405 591 l
2407 590 l
2409 588 l
2411 587 l
2413 585 l
2415 584 l
2417 582 l
2419 581 l
2420 580 l
2422 578 l
2424 577 l
2426 575 l
2428 574 l
2430 572 l
2432 571 l
2434 569 l
2436 568 l
2437 566 l
2439 565 l
2441 563 l
2443 562 l
2445 561 l
2447 559 l
2449 558 l
2451 556 l
2453 555 l
2454 553 l
2456 552 l
2458 550 l
2460 549 l
2462 547 l
2464 546 l
2466 545 l
2468 543 l
2469 542 l
2471 540 l
2473 539 l
2475 537 l
2477 536 l
2479 534 l
2481 533 l
2483 531 l
2485 530 l
2486 528 l
2488 527 l
2490 526 l
2492 524 l
2494 523 l
2496 521 l
2498 520 l
2500 518 l
2501 517 l
2503 515 l
2505 514 l
2507 512 l
2509 511 l
2511 509 l
2513 508 l
2515 507 l
2517 505 l
2518 504 l
2520 502 l
2522 501 l
2524 499 l
2526 498 l
2528 496 l
2530 495 l
2532 493 l
2533 492 l
2535 490 l
2537 489 l
2539 488 l
2541 486 l
2543 485 l
2545 483 l
2547 482 l
2549 480 l
2550 479 l
2552 477 l
2554 476 l
2556 474 l
2558 473 l
2560 471 l
2562 470 l
2564 469 l
2566 467 l
2567 466 l
2569 464 l
2571 463 l
2573 461 l
2575 460 l
2577 458 l
2579 457 l
2581 455 l
2582 454 l
2584 452 l
2586 451 l
2588 450 l
2590 448 l
2592 447 l
2594 445 l
2596 444 l
2598 442 l
2599 441 l
2601 439 l
2603 438 l
2605 436 l
2607 435 l
2609 433 l
2611 432 l
2613 431 l
st
gr
2360 92 m
2662 92 l
2662 219 l
2360 219 l
cp
gs
1 1 1 rgb
eofi
gr
3 sw
st
gs
gs
gr
gs
2445 141 m
2487 183 l
st
2487 141 m
2445 183 l
st
gr
1 -1 sc
/MC1_Arial 84 self 2560 -190 m
( )[23 ] xs
1 -1 sc
1 -1 sc
2583 -190 m
(t)[23 ] xs
1 -1 sc
1 -1 sc
/MC1_Arial 50 self 2606 -149 m
(-2)[17 28 ] xs
1 -1 sc
gr
gs
gs
1 -1 sc
291 -1295 tr
90 ro
/MC2_Arial 91 self 0 0 m
(t)[25 ] xs
1 -1 sc
gr
gs
1 -1 sc
246 -1270 tr
90 ro
/MC2_Arial 55 self 0 0 m
(-2)[18 31 ] xs
1 -1 sc
gr
gs
1 -1 sc
291 -1221 tr
90 ro
/MC2_Arial 91 self 0 0 m
( \(s)[25 30 46 ] xs
1 -1 sc
gr
gs
1 -1 sc
246 -1120 tr
90 ro
/MC2_Arial 55 self 0 0 m
(-2)[18 31 ] xs
1 -1 sc
gr
gs
1 -1 sc
291 -1071 tr
90 ro
/MC2_Arial 91 self 0 0 m
(\))[30 ] xs
1 -1 sc
gr
gr
gs
1 -1 sc
/MC1_Arial 91 self 1566 -2307 m
(m \(g\))[76 25 30 51 30 ] xs
1 -1 sc
gr
gr
Save0 restore end
showpage
%%EOF

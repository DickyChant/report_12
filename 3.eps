%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 772 591
%%LanguageLevel: 2
%%Creator: OriginLab Corporation
%%Title: (C:\Users\Dicky\Desktop\report_12\3.eps)
%%CreationDate: Sat Dec 23 22:59:08 2017
%%EndComments

/OriginLab::PSL1 128 dict dup begin def
/Save0 save def
%%BeginResource: procset OriginLab::PSL1
/wd{1 index where{pop pop pop}{bind def}ifelse}bind def
/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}wd
/selectfont{dup type/arraytype eq{exch findfont exch makefont setfont}{exch findfont exch scalefont setfont}ifelse}wd
/xshow{1 index length 0 le{}{currentpoint exch 3 index length 1 sub 0 exch 1 exch{dup 5 index exch 1 getinterval show 3 index exch get add 2 copy exch moveto}for pop pop}ifelse pop pop}wd
/glyphshow{matrix currentmatrix exch currentfont dup/FontMatrix get concat currentpoint translate
 dup/Metrics get 2 index get 0 4 2 roll gsave/CharProcs get exch 2 copy known not{pop/.notdef}if
 get exec fill grestore moveto setmatrix}wd
/grayimage/image load def/rgbtogray{cvx exec dup length 3 idiv 1 sub 0 exch 1 exch{dup 3 mul dup 3 index exch get 255 div .3 mul exch
 1 add dup 4 index exch get 255 div .59 mul exch 1 add 4 index exch get 255 div .11 mul add add
 255 mul dup 255 gt{255}if round cvi 2 index 3 1 roll put}for dup length 3 idiv 0 exch getinterval}bind def
/colorimage{0 setgray pop pop cvlit/rgbtogray cvx 2 packedarray cvx grayimage}wd
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/xd{cvx def}bd
/np/newpath ld/a/arc ld/m/moveto ld/l/lineto ld/c/curveto ld/rm/rmoveto ld/rl/rlineto ld/rc/rcurveto ld/cp/closepath ld/cpt/currentpoint ld
/tr/translate ld/sc/scale ld/ro/rotate ld/t/transform ld/it/itransform ld/dt/dtransform ld/idt/idtransform ld
/mtx/matrix ld/cmtx/currentmatrix ld/dmtx/defaultmatrix ld/smtx/setmatrix ld/catmtx/concatmatrix ld
/sw/setlinewidth ld/scap/setlinecap ld/sj/setlinejoin ld/sm/setmiterlimit ld/sd/setdash ld/rgb/setrgbcolor ld/crgb/currentrgbcolor ld/cmyk/setcmykcolor ld/gs/gsave ld/gr/grestore ld
/st/stroke ld/fi/fill ld/eofi/eofill ld/cl/clip ld/eocl/eoclip ld
/df/definefont ld/ff/findfont ld/sf/setfont ld/scf/scalefont ld/self/selectfont ld/cf/currentfont ld
/s/show ld/xs/xshow ld/gls/glyphshow ld/xgls{cpt 3 1 roll add exch 3 -1 roll gls m}bd
/cd/currentdict ld/i/index ld
/DrawBox{4 2 roll m 1 index 0 rl 0 exch rl neg 0 rl cp}bd
/plus.re { 6 { 3 index } repeat moveto 0 exch rlineto 0 rlineto pop pop neg 0 exch rlineto pop lineto closepath } def
/DrawBcc{4 2 roll m 2 copy 0 lt exch 0 lt xor{dup 0 exch rl exch 0 rl neg 0 exch rl}{exch dup 0 rl exch 0 exch rl neg 0 rl}ifelse cp}bd
/rectline{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBox}for pop}{DrawBox}ifelse}bd
/rectpath{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBcc}for pop}{DrawBcc}ifelse}bd
/pathproc{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall]cvx}bd
/L1img/image ld/L1idx[{0}
 {dup 7 and 3 1 roll -3 bitshift get exch 7 sub 1 mul bitshift  1 and}bind 1 index dup
 {dup 1 and 3 1 roll -1 bitshift get exch 1 sub 4 mul bitshift 15 and}bind 1 index dup dup
 {get}bind]def
/image{dup type/dicttype eq {dup/ImgCS get 0 get/Indexed eq}{false}ifelse
 {begin Width Height 8 ImageMatrix {rgb_string rgb_lookup
 cd/DataSource get dup type/filetype eq
 {mystring readstring pop}{exec}ifelse
 dup length 0 ne
 {L1idx BitsPerComponent get 0 1 Width 1 sub
 {3 copy exch exec exch 3 mul exch
 3 mul dup 5 index exch get exch 1 add dup 6 index exch get exch 1 add 6 index exch get
 7 index exch 4 index 2 add exch put 6 index exch 3 index 1 add exch put 5 index exch 2 index exch put pop
 }for pop pop pop }{pop pop pop ()}ifelse }false 3 colorimage end} {dup type/dicttype eq
 {{dup mark exch L1img pop pop}stopped{cleartomark begin Width Height BitsPerComponent ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }false 3 colorimage end} if}{L1img}ifelse}ifelse
 }bd
/L1imgmask/imagemask ld/imagemask{dup type/dicttype eq
 {{dup mark exch L1imgmask pop pop}stopped {cleartomark begin Width Height polarityflag ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }L1imgmask end}if}{L1imgmask}ifelse
 }bd
% Gradient function
/GradientStep 1 150 div def
/GradientStartRGB { /R1 exch def /G1 exch def /B1 exch def } def
/GradientEndRGB { /R2 exch def /G2 exch def /B2 exch def
/GradientSteps GradientLength GradientStep div def
/GradientRStep R2 R1 sub GradientSteps div def
/GradientGStep G2 G1 sub GradientSteps div def
/GradientBStep B2 B1 sub GradientSteps div def
} def
/GradientStepRGB { /R1 R1 GradientRStep add def
/G1 G1 GradientGStep add def
/B1 B1 GradientBStep add def
R1 G1 B1 setrgbcolor
} def
%%EndResource
/rectclip{np rectpath clip np}wd
/rectfill{gs np rectpath fi gr}wd
/rectstroke{gs np dup type/arraytype eq{dup length 6 eq}{false}ifelse{1 index type/arraytype eq{exch}{5 1 roll}ifelse rectline concat st}{rectline st}ifelse gr}wd
%%BeginResource: procset OriginLab::Image
/OriginLab::Image 32 dict dup begin
/BinProc{[currentfile mystring /readstring cvx /pop cvx] cvx bind}bd
/HexProc{[currentfile mystring /readhexstring cvx /pop cvx] cvx bind}bd
/Ascii85Proc{currentfile /ASCII85Decode filter}bd
/LZWA85{currentfile /ASCII85Decode filter /LZWDecode filter}bd
/ImgProcArray[/BinProc /HexProc /Ascii85Proc /LZWA85]def
/ImgDict{/ImgDict 16 dict def ImgDict dup begin /ImageType 1 def /MultipleDataSource false def end}bd
/L2Dec{{[1 0]}{[0 1]}ifelse}bd
/BegImg{ /Img_sv save def
 /ImgDir ed ImgProcArray exch get /ImgProc exch ld
 dup /polarityflag ed L2Dec /polarity ed /smoothflag ed
 tr /dx 2 index def /dy 1 index abs def sc
 string /mystring ed /bpc ed /ih ed /iw ed
 }bd
/EndImg {Img_sv restore}bd
/DoXImg{ /rgb_lookup ed /hival ed ImgDict dup begin
 [/Indexed /DeviceRGB hival rgb_lookup] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 bpc{2 mul}repeat 1 sub] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent bpc def
 /Interpolate smoothflag def
 end image}bd
/DoImg{ ImgDict dup begin
 [/DeviceRGB] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 0 1 0 1] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent 8 def
 /Interpolate smoothflag def
 end image}bd
end def
%%EndResource
/initmtx mtx cmtx def
%%BeginFont: /MC1_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC1_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2129] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 40/s40 put
Encoding 41/s41 put
Encoding 48/s48 put
Encoding 49/s49 put
Encoding 50/s50 put
Encoding 52/s52 put
Encoding 54/s54 put
Encoding 56/s56 put
Encoding 99/s99 put
Encoding 105/s105 put
Encoding 109/s109 put
Encoding 116/s116 put
Encoding 120/s120 put
/BoundingBoxes 15 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s40 [0 -434 682 1854] def
/s41 [0 -434 682 1854] def
/s48 [0 -434 1139 1854] def
/s49 [0 -434 1139 1854] def
/s50 [0 -434 1139 1854] def
/s52 [0 -434 1139 1854] def
/s54 [0 -434 1139 1854] def
/s56 [0 -434 1139 1854] def
/s99 [0 -434 1024 1854] def
/s105 [0 -434 455 1854] def
/s109 [0 -434 1706 1854] def
/s116 [0 -434 569 1854] def
/s120 [0 -434 1024 1854] def
end
/Metrics 15 dict def
 Metrics begin
/s32 569 def
/s40 682 def
/s41 682 def
/s48 1139 def
/s49 1139 def
/s50 1139 def
/s52 1139 def
/s54 1139 def
/s56 1139 def
/s99 1024 def
/s105 455 def
/s109 1706 def
/s116 569 def
/s120 1024 def
end
/CharProcs 15 dict def
CharProcs begin
/.notdef {} def
/s40 {
479 -431 m
379.67 -305.67 295.67 -159 227 9 c
158.33 177 124 351 124 531 c
124 689.67 149.67 841.67 201 987 c
261 1155.67 353.67 1323.67 479 1491 c
608 1491 479 1491 608 1491 c
527.33 1352.33 474 1253.33 448 1194 c
407.33 1102 375.33 1006 352 906 c
323.33 781.33 309 656 309 530 c
309 209.33 408.67 -111 608 -431 c
479 -431 608 -431 479 -431 c
closepath } bind def
/s41 {
253 -431 m
124 -431 253 -431 124 -431 c
323.33 -111 423 209.33 423 530 c
423 655.33 408.67 779.67 380 903 c
357.33 1003 325.67 1099 285 1191 c
259 1251 205.33 1351 124 1491 c
253 1491 124 1491 253 1491 c
378.33 1323.67 471 1155.67 531 987 c
582.33 841.67 608 689.67 608 531 c
608 351 573.5 177 504.5 9 c
435.5 -159 351.67 -305.67 253 -431 c
closepath } bind def
/s48 {
85 723 m
85 896.33 102.83 1035.83 138.5 1141.5 c
174.17 1247.17 227.17 1328.67 297.5 1386 c
367.83 1443.33 456.33 1472 563 1472 c
641.67 1472 710.67 1456.17 770 1424.5 c
829.33 1392.83 878.33 1347.17 917 1287.5 c
955.67 1227.83 986 1155.17 1008 1069.5 c
1030 983.83 1041 868.33 1041 723 c
1041 551 1023.33 412.17 988 306.5 c
952.67 200.83 899.83 119.17 829.5 61.5 c
759.17 3.83 670.33 -25 563 -25 c
421.67 -25 310.67 25.67 230 127 c
133.33 249 85 447.67 85 723 c
closepath 270 723 m
270 482.33 298.17 322.17 354.5 242.5 c
410.83 162.83 480.33 123 563 123 c
645.67 123 715.17 163 771.5 243 c
827.83 323 856 483 856 723 c
856 964.33 827.83 1124.67 771.5 1204 c
715.17 1283.33 645 1323 561 1323 c
478.33 1323 412.33 1288 363 1218 c
301 1128.67 270 963.67 270 723 c
closepath } bind def
/s49 {
763 0 m
583 0 763 0 583 0 c
583 1147 583 0 583 1147 c
539.67 1105.67 482.83 1064.33 412.5 1023 c
342.17 981.67 279 950.67 223 930 c
223 1104 223 930 223 1104 c
323.67 1151.33 411.67 1208.67 487 1276 c
562.33 1343.33 615.67 1408.67 647 1472 c
763 1472 647 1472 763 1472 c
763 0 763 1472 763 0 c
closepath } bind def
/s50 {
1031 173 m
1031 0 1031 173 1031 0 c
62 0 1031 0 62 0 c
60.67 43.33 67.67 85 83 125 c
107.67 191 147.17 256 201.5 320 c
255.83 384 334.33 458 437 542 c
596.33 672.67 704 776.17 760 852.5 c
816 928.83 844 1001 844 1069 c
844 1140.33 818.5 1200.5 767.5 1249.5 c
716.5 1298.5 650 1323 568 1323 c
481.33 1323 412 1297 360 1245 c
308 1193 281.67 1121 281 1029 c
96 1048 281 1029 96 1048 c
108.67 1186 156.33 1291.17 239 1363.5 c
321.67 1435.83 432.67 1472 572 1472 c
712.67 1472 824 1433 906 1355 c
988 1277 1029 1180.33 1029 1065 c
1029 1006.33 1017 948.67 993 892 c
969 835.33 929.17 775.67 873.5 713 c
817.83 650.33 725.33 564.33 596 455 c
488 364.33 418.67 302.83 388 270.5 c
357.33 238.17 332 205.67 312 173 c
1031 173 312 173 1031 173 c
closepath } bind def
/s52 {
662 0 m
662 351 662 0 662 351 c
26 351 662 351 26 351 c
26 516 26 351 26 516 c
695 1466 26 516 695 1466 c
842 1466 695 1466 842 1466 c
842 516 842 1466 842 516 c
1040 516 842 516 1040 516 c
1040 351 1040 516 1040 351 c
842 351 1040 351 842 351 c
842 0 842 351 842 0 c
662 0 842 0 662 0 c
closepath 662 516 m
662 1177 662 516 662 1177 c
203 516 662 1177 203 516 c
662 516 203 516 662 516 c
closepath } bind def
/s54 {
1019 1107 m
840 1093 1019 1107 840 1093 c
824 1163.67 801.33 1215 772 1247 c
723.33 1298.33 663.33 1324 592 1324 c
534.67 1324 484.33 1308 441 1276 c
384.33 1234.67 339.67 1174.33 307 1095 c
274.33 1015.67 257.33 902.67 256 756 c
299.33 822 352.33 871 415 903 c
477.67 935 543.33 951 612 951 c
732 951 834.17 906.83 918.5 818.5 c
1002.83 730.17 1045 616 1045 476 c
1045 384 1025.17 298.5 985.5 219.5 c
945.83 140.5 891.33 80 822 38 c
752.67 -4 674 -25 586 -25 c
436 -25 313.67 30.17 219 140.5 c
124.33 250.83 77 432.67 77 686 c
77 969.33 129.33 1175.33 234 1304 c
325.33 1416 448.33 1472 603 1472 c
718.33 1472 812.83 1439.67 886.5 1375 c
960.17 1310.33 1004.33 1221 1019 1107 c
closepath 284 475 m
284 413 297.17 353.67 323.5 297 c
349.83 240.33 386.67 197.17 434 167.5 c
481.33 137.83 531 123 583 123 c
659 123 724.33 153.67 779 215 c
833.67 276.33 861 359.67 861 465 c
861 566.33 834 646.17 780 704.5 c
726 762.83 658 792 576 792 c
494.67 792 425.67 762.83 369 704.5 c
312.33 646.17 284 569.67 284 475 c
closepath } bind def
/s56 {
362 795 m
287.33 822.33 232 861.33 196 912 c
160 962.67 142 1023.33 142 1094 c
142 1200.67 180.33 1290.33 257 1363 c
333.67 1435.67 435.67 1472 563 1472 c
691 1472 794 1434.83 872 1360.5 c
950 1286.17 989 1195.67 989 1089 c
989 1021 971.17 961.83 935.5 911.5 c
899.83 861.17 845.67 822.33 773 795 c
863 765.67 931.5 718.33 978.5 653 c
1025.5 587.67 1049 509.67 1049 419 c
1049 293.67 1004.67 188.33 916 103 c
827.33 17.67 710.67 -25 566 -25 c
421.33 -25 304.67 17.83 216 103.5 c
127.33 189.17 83 296 83 424 c
83 519.33 107.17 599.17 155.5 663.5 c
203.83 727.83 272.67 771.67 362 795 c
closepath 326 1100 m
326 1030.67 348.33 974 393 930 c
437.67 886 495.67 864 567 864 c
636.33 864 693.17 885.83 737.5 929.5 c
781.83 973.17 804 1026.67 804 1090 c
804 1156 781.17 1211.5 735.5 1256.5 c
689.83 1301.5 633 1324 565 1324 c
496.33 1324 439.33 1302 394 1258 c
348.67 1214 326 1161.33 326 1100 c
closepath 268 423 m
268 371.67 280.17 322 304.5 274 c
328.83 226 365 188.83 413 162.5 c
461 136.17 512.67 123 568 123 c
654 123 725 150.67 781 206 c
837 261.33 865 331.67 865 417 c
865 503.67 836.17 575.33 778.5 632 c
720.83 688.67 648.67 717 562 717 c
477.33 717 407.17 689 351.5 633 c
295.83 577 268 507 268 423 c
closepath } bind def
/s99 {
828 389 m
1005 366 828 389 1005 366 c
985.67 244 936.17 148.5 856.5 79.5 c
776.83 10.5 679 -24 563 -24 c
417.67 -24 300.83 23.5 212.5 118.5 c
124.17 213.5 80 349.67 80 527 c
80 641.67 99 742 137 828 c
175 914 232.83 978.5 310.5 1021.5 c
388.17 1064.5 472.67 1086 564 1086 c
679.33 1086 773.67 1056.83 847 998.5 c
920.33 940.17 967.33 857.33 988 750 c
813 723 988 750 813 723 c
796.33 794.33 766.83 848 724.5 884 c
682.17 920 631 938 571 938 c
480.33 938 406.67 905.5 350 840.5 c
293.33 775.5 265 672.67 265 532 c
265 389.33 292.33 285.67 347 221 c
401.67 156.33 473 124 561 124 c
631.67 124 690.67 145.67 738 189 c
785.33 232.33 815.33 299 828 389 c
closepath } bind def
/s105 {
136 1259 m
136 1466 136 1259 136 1466 c
316 1466 136 1466 316 1466 c
316 1259 316 1466 316 1259 c
136 1259 316 1259 136 1259 c
closepath 136 0 m
136 1062 136 0 136 1062 c
316 1062 136 1062 316 1062 c
316 0 316 1062 316 0 c
136 0 316 0 136 0 c
closepath } bind def
/s109 {
135 0 m
135 1062 135 0 135 1062 c
296 1062 135 1062 296 1062 c
296 913 296 1062 296 913 c
329.33 965 373.67 1006.83 429 1038.5 c
484.33 1070.17 547.33 1086 618 1086 c
696.67 1086 761.17 1069.67 811.5 1037 c
861.83 1004.33 897.33 958.67 918 900 c
1002 1024 1111.33 1086 1246 1086 c
1351.33 1086 1432.33 1056.83 1489 998.5 c
1545.67 940.17 1574 850.33 1574 729 c
1574 0 1574 729 1574 0 c
1395 0 1574 0 1395 0 c
1395 669 1395 0 1395 669 c
1395 741 1389.17 792.83 1377.5 824.5 c
1365.83 856.17 1344.67 881.67 1314 901 c
1283.33 920.33 1247.33 930 1206 930 c
1131.33 930 1069.33 905.17 1020 855.5 c
970.67 805.83 946 726.33 946 617 c
946 0 946 617 946 0 c
766 0 946 0 766 0 c
766 690 766 0 766 690 c
766 770 751.33 830 722 870 c
692.67 910 644.67 930 578 930 c
527.33 930 480.5 916.67 437.5 890 c
394.5 863.33 363.33 824.33 344 773 c
324.67 721.67 315 647.67 315 551 c
315 0 315 551 315 0 c
135 0 315 0 135 0 c
closepath } bind def
/s116 {
528 161 m
554 2 528 161 554 2 c
503.33 -8.67 458 -14 418 -14 c
352.67 -14 302 -3.67 266 17 c
230 37.67 204.67 64.83 190 98.5 c
175.33 132.17 168 203 168 311 c
168 922 168 311 168 922 c
36 922 168 922 36 922 c
36 1062 36 922 36 1062 c
168 1062 36 1062 168 1062 c
168 1325 168 1062 168 1325 c
347 1433 168 1325 347 1433 c
347 1062 347 1433 347 1062 c
528 1062 347 1062 528 1062 c
528 922 528 1062 528 922 c
347 922 528 922 347 922 c
347 301 347 922 347 301 c
347 249.67 350.17 216.67 356.5 202 c
362.83 187.33 373.17 175.67 387.5 167 c
401.83 158.33 422.33 154 449 154 c
469 154 495.33 156.33 528 161 c
closepath } bind def
/s120 {
15 0 m
403 552 15 0 403 552 c
44 1062 403 552 44 1062 c
269 1062 44 1062 269 1062 c
432 813 269 1062 432 813 c
462.67 765.67 487.33 726 506 694 c
535.33 738 562.33 777 587 811 c
766 1062 587 811 766 1062 c
981 1062 766 1062 981 1062 c
614 562 981 1062 614 562 c
1009 0 614 562 1009 0 c
788 0 1009 0 788 0 c
570 330 788 0 570 330 c
512 419 570 330 512 419 c
233 0 512 419 233 0 c
15 0 233 0 15 0 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC1_Arial exch definefont pop
%%EndFont
%%BeginFont: /MC2_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC2_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2129] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 40/s40 put
Encoding 41/s41 put
Encoding 50/s50 put
Encoding 115/s115 put
Encoding 116/s116 put
/BoundingBoxes 7 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s40 [0 -434 682 1854] def
/s41 [0 -434 682 1854] def
/s50 [0 -434 1139 1854] def
/s115 [0 -434 1024 1854] def
/s116 [0 -434 569 1854] def
end
/Metrics 7 dict def
 Metrics begin
/s32 569 def
/s40 682 def
/s41 682 def
/s50 1139 def
/s115 1024 def
/s116 569 def
end
/CharProcs 7 dict def
CharProcs begin
/.notdef {} def
/s40 {
479 -431 m
379.67 -305.67 295.67 -159 227 9 c
158.33 177 124 351 124 531 c
124 689.67 149.67 841.67 201 987 c
261 1155.67 353.67 1323.67 479 1491 c
608 1491 479 1491 608 1491 c
527.33 1352.33 474 1253.33 448 1194 c
407.33 1102 375.33 1006 352 906 c
323.33 781.33 309 656 309 530 c
309 209.33 408.67 -111 608 -431 c
479 -431 608 -431 479 -431 c
closepath } bind def
/s41 {
253 -431 m
124 -431 253 -431 124 -431 c
323.33 -111 423 209.33 423 530 c
423 655.33 408.67 779.67 380 903 c
357.33 1003 325.67 1099 285 1191 c
259 1251 205.33 1351 124 1491 c
253 1491 124 1491 253 1491 c
378.33 1323.67 471 1155.67 531 987 c
582.33 841.67 608 689.67 608 531 c
608 351 573.5 177 504.5 9 c
435.5 -159 351.67 -305.67 253 -431 c
closepath } bind def
/s50 {
1031 173 m
1031 0 1031 173 1031 0 c
62 0 1031 0 62 0 c
60.67 43.33 67.67 85 83 125 c
107.67 191 147.17 256 201.5 320 c
255.83 384 334.33 458 437 542 c
596.33 672.67 704 776.17 760 852.5 c
816 928.83 844 1001 844 1069 c
844 1140.33 818.5 1200.5 767.5 1249.5 c
716.5 1298.5 650 1323 568 1323 c
481.33 1323 412 1297 360 1245 c
308 1193 281.67 1121 281 1029 c
96 1048 281 1029 96 1048 c
108.67 1186 156.33 1291.17 239 1363.5 c
321.67 1435.83 432.67 1472 572 1472 c
712.67 1472 824 1433 906 1355 c
988 1277 1029 1180.33 1029 1065 c
1029 1006.33 1017 948.67 993 892 c
969 835.33 929.17 775.67 873.5 713 c
817.83 650.33 725.33 564.33 596 455 c
488 364.33 418.67 302.83 388 270.5 c
357.33 238.17 332 205.67 312 173 c
1031 173 312 173 1031 173 c
closepath } bind def
/s115 {
63 317 m
241 345 63 317 241 345 c
251 273.67 278.83 219 324.5 181 c
370.17 143 434 124 516 124 c
598.67 124 660 140.83 700 174.5 c
740 208.17 760 247.67 760 293 c
760 333.67 742.33 365.67 707 389 c
682.33 405 621 425.33 523 450 c
391 483.33 299.5 512.17 248.5 536.5 c
197.5 560.83 158.83 594.5 132.5 637.5 c
106.17 680.5 93 728 93 780 c
93 827.33 103.83 871.17 125.5 911.5 c
147.17 951.83 176.67 985.33 214 1012 c
242 1032.67 280.17 1050.17 328.5 1064.5 c
376.83 1078.83 428.67 1086 484 1086 c
567.33 1086 640.5 1074 703.5 1050 c
766.5 1026 813 993.5 843 952.5 c
873 911.5 893.67 856.67 905 788 c
729 764 905 788 729 764 c
721 818.67 697.83 861.33 659.5 892 c
621.17 922.67 567 938 497 938 c
414.33 938 355.33 924.33 320 897 c
284.67 869.67 267 837.67 267 801 c
267 777.67 274.33 756.67 289 738 c
303.67 718.67 326.67 702.67 358 690 c
376 683.33 429 668 517 644 c
644.33 610 733.17 582.17 783.5 560.5 c
833.83 538.83 873.33 507.33 902 466 c
930.67 424.67 945 373.33 945 312 c
945 252 927.5 195.5 892.5 142.5 c
857.5 89.5 807 48.5 741 19.5 c
675 -9.5 600.33 -24 517 -24 c
379 -24 273.83 4.67 201.5 62 c
129.17 119.33 83 204.33 63 317 c
closepath } bind def
/s116 {
528 161 m
554 2 528 161 554 2 c
503.33 -8.67 458 -14 418 -14 c
352.67 -14 302 -3.67 266 17 c
230 37.67 204.67 64.83 190 98.5 c
175.33 132.17 168 203 168 311 c
168 922 168 311 168 922 c
36 922 168 922 36 922 c
36 1062 36 922 36 1062 c
168 1062 36 1062 168 1062 c
168 1325 168 1062 168 1325 c
347 1433 168 1325 347 1433 c
347 1062 347 1433 347 1062 c
528 1062 347 1062 528 1062 c
528 922 528 1062 528 922 c
347 922 528 922 347 922 c
347 301 347 922 347 301 c
347 249.67 350.17 216.67 356.5 202 c
362.83 187.33 373.17 175.67 387.5 167 c
401.83 158.33 422.33 154 449 154 c
469 154 495.33 156.33 528 161 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC2_Arial exch definefont pop
%%EndFont
/clipproc{clippath{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall}stopped
{cleartomark[pathbbox exch 3 i sub exch 2 i sub/rectpath cvx}if]np}bd
/iclmtx mtx cmtx def/iclpath clipproc xd/clinit{pathproc initclip np iclpath cl np exec}bd
/clmove{pathproc 3 1 roll clippath pathproc 2 i neg 2 i neg tr initclip np exec cl tr np exec}bd
/clrect[gs np iclpath{pathbbox}stopped{0 0 771.85 590.88 }if gr]def
/cloper{mtx cmtx iclmtx smtx exch exec smtx}bd
/cland{{exch cvx exec}cloper}bd
/clcopy{{exch clinit cvx exec}cloper}bd
/cldiff{{exch pathbbox 4 -1 roll clrect 0 get 2 copy gt{exch}if pop 4 1 roll
 3 -1 roll clrect 1 get 2 copy gt{exch}if pop 3 1 roll
 2 -1 roll clrect 2 get 2 copy lt{exch}if pop 2 1 roll
 1 -1 roll clrect 3 get 2 copy lt{exch}if pop 1 1 roll
 exch 3 i sub exch 2 i sub rectpath cvx exec}cloper}bd
/icl{{clinit}cloper}bd
0.891235 0.891231 sc

/initmtx mtx cmtx def
initmtx smtx
[1.0000 0.0000 0.0000 1.0000 0.0000 0.0000 ] concat
 [0.269291 -0 0 -0.269291 0 662.995] concat
gs
575 2052 m
2770 2052 l
7 sw
1 sj
1 scap
st
575 2052 m
575 2069 l
st
795 2052 m
795 2069 l
st
1014 2052 m
1014 2069 l
st
1234 2052 m
1234 2069 l
st
1453 2052 m
1453 2069 l
st
1673 2052 m
1673 2069 l
st
1892 2052 m
1892 2069 l
st
2112 2052 m
2112 2069 l
st
2331 2052 m
2331 2069 l
st
2551 2052 m
2551 2069 l
st
2770 2052 m
2770 2069 l
st
685 2052 m
685 2086 l
st
904 2052 m
904 2086 l
st
1124 2052 m
1124 2086 l
st
1343 2052 m
1343 2086 l
st
1563 2052 m
1563 2086 l
st
1782 2052 m
1782 2086 l
st
2002 2052 m
2002 2086 l
st
2221 2052 m
2221 2086 l
st
2441 2052 m
2441 2086 l
st
2660 2052 m
2660 2086 l
st
575 2052 m
575 285 l
st
575 2052 m
558 2052 l
st
575 1731 m
558 1731 l
st
575 1409 m
558 1409 l
st
575 1088 m
558 1088 l
st
575 767 m
558 767 l
st
575 446 m
558 446 l
st
575 1891 m
541 1891 l
st
575 1570 m
541 1570 l
st
575 1249 m
541 1249 l
st
575 928 m
541 928 l
st
575 606 m
541 606 l
st
575 285 m
541 285 l
st
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 664 -2169 m
(0)[42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 862 -2169 m
(20)[42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1082 -2169 m
(40)[42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1301 -2169 m
(60)[42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1521 -2169 m
(80)[42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1719 -2169 m
(100)[42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1939 -2169 m
(120)[42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 2158 -2169 m
(140)[42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 2378 -2169 m
(160)[42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 2597 -2169 m
(180)[42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 433 -1914 m
(40)[42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 433 -1593 m
(60)[42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 433 -1272 m
(80)[42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 391 -951 m
(100)[42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 391 -629 m
(120)[42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 391 -308 m
(140)[42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
pathproc 575 285 2196 1768 np rectpath
/eocl cland
np exec
786 1837 m
830 1881 l
3 sw
st
830 1837 m
786 1881 l
st
1029 1616 m
1073 1660 l
st
1073 1616 m
1029 1660 l
st
1394 1329 m
1438 1373 l
st
1438 1329 m
1394 1373 l
st
1941 912 m
1985 956 l
st
1985 912 m
1941 956 l
st
2529 511 m
2573 555 l
st
2573 511 m
2529 555 l
st
gr
gs
pathproc 575 285 2196 1768 np rectpath
/eocl cland
np exec
808 1831 m
808 1831 m
810 1830 l
812 1828 l
813 1827 l
815 1826 l
817 1825 l
819 1823 l
820 1822 l
822 1821 l
824 1819 l
826 1818 l
827 1817 l
829 1815 l
831 1814 l
833 1813 l
834 1811 l
836 1810 l
838 1809 l
840 1807 l
841 1806 l
843 1805 l
845 1803 l
847 1802 l
848 1801 l
850 1799 l
852 1798 l
854 1797 l
855 1795 l
857 1794 l
859 1793 l
861 1791 l
862 1790 l
864 1789 l
866 1787 l
868 1786 l
869 1785 l
871 1784 l
873 1782 l
875 1781 l
876 1780 l
878 1778 l
880 1777 l
881 1776 l
883 1774 l
885 1773 l
887 1772 l
888 1770 l
890 1769 l
892 1768 l
894 1766 l
895 1765 l
897 1764 l
899 1762 l
901 1761 l
902 1760 l
904 1758 l
906 1757 l
908 1756 l
909 1754 l
911 1753 l
913 1752 l
915 1750 l
916 1749 l
918 1748 l
920 1747 l
922 1745 l
923 1744 l
925 1743 l
927 1741 l
929 1740 l
930 1739 l
932 1737 l
934 1736 l
936 1735 l
937 1733 l
939 1732 l
941 1731 l
943 1729 l
944 1728 l
946 1727 l
948 1725 l
950 1724 l
951 1723 l
953 1721 l
955 1720 l
957 1719 l
958 1717 l
960 1716 l
962 1715 l
963 1713 l
965 1712 l
967 1711 l
969 1709 l
970 1708 l
972 1707 l
974 1706 l
976 1704 l
977 1703 l
979 1702 l
981 1700 l
983 1699 l
984 1698 l
986 1696 l
988 1695 l
990 1694 l
991 1692 l
993 1691 l
995 1690 l
997 1688 l
998 1687 l
1000 1686 l
1002 1684 l
1004 1683 l
1005 1682 l
1007 1680 l
1009 1679 l
1011 1678 l
1012 1676 l
1014 1675 l
1016 1674 l
1018 1672 l
1019 1671 l
1021 1670 l
1023 1669 l
1025 1667 l
1026 1666 l
1028 1665 l
1030 1663 l
1032 1662 l
1033 1661 l
1035 1659 l
1037 1658 l
1039 1657 l
1040 1655 l
1042 1654 l
1044 1653 l
1046 1651 l
1047 1650 l
1049 1649 l
1051 1647 l
1052 1646 l
1054 1645 l
1056 1643 l
1058 1642 l
1059 1641 l
1061 1639 l
1063 1638 l
1065 1637 l
1066 1635 l
1068 1634 l
1070 1633 l
1072 1632 l
1073 1630 l
1075 1629 l
1077 1628 l
1079 1626 l
1080 1625 l
1082 1624 l
1084 1622 l
1086 1621 l
1087 1620 l
1089 1618 l
1091 1617 l
1093 1616 l
1094 1614 l
1096 1613 l
1098 1612 l
1100 1610 l
1101 1609 l
1103 1608 l
1105 1606 l
1107 1605 l
1108 1604 l
1110 1602 l
1112 1601 l
1114 1600 l
1115 1598 l
1117 1597 l
1119 1596 l
1121 1594 l
1122 1593 l
1124 1592 l
1126 1591 l
1128 1589 l
1129 1588 l
1131 1587 l
1133 1585 l
1134 1584 l
1136 1583 l
1138 1581 l
1140 1580 l
1141 1579 l
1143 1577 l
1145 1576 l
1147 1575 l
1148 1573 l
1150 1572 l
1152 1571 l
1154 1569 l
1155 1568 l
1157 1567 l
1159 1565 l
1161 1564 l
1162 1563 l
1164 1561 l
1166 1560 l
1168 1559 l
1169 1557 l
1171 1556 l
1173 1555 l
1175 1554 l
1176 1552 l
1178 1551 l
1180 1550 l
1182 1548 l
1183 1547 l
1185 1546 l
1187 1544 l
1189 1543 l
1190 1542 l
1192 1540 l
1194 1539 l
1196 1538 l
1197 1536 l
1199 1535 l
1201 1534 l
1203 1532 l
1204 1531 l
1206 1530 l
1208 1528 l
1210 1527 l
1211 1526 l
1213 1524 l
1215 1523 l
1216 1522 l
1218 1520 l
1220 1519 l
1222 1518 l
1223 1516 l
1225 1515 l
1227 1514 l
1229 1513 l
1230 1511 l
1232 1510 l
1234 1509 l
1236 1507 l
1237 1506 l
1239 1505 l
1241 1503 l
1243 1502 l
1244 1501 l
1246 1499 l
1248 1498 l
1250 1497 l
1251 1495 l
1253 1494 l
1255 1493 l
1257 1491 l
1258 1490 l
1260 1489 l
1262 1487 l
1264 1486 l
1265 1485 l
1267 1483 l
1269 1482 l
1271 1481 l
1272 1479 l
1274 1478 l
1276 1477 l
1278 1476 l
1279 1474 l
1281 1473 l
1283 1472 l
1285 1470 l
1286 1469 l
1288 1468 l
1290 1466 l
1292 1465 l
1293 1464 l
1295 1462 l
1297 1461 l
1298 1460 l
1300 1458 l
1302 1457 l
1304 1456 l
1305 1454 l
1307 1453 l
1309 1452 l
1311 1450 l
1312 1449 l
1314 1448 l
1316 1446 l
1318 1445 l
1319 1444 l
1321 1442 l
1323 1441 l
1325 1440 l
1326 1438 l
1328 1437 l
1330 1436 l
1332 1435 l
1333 1433 l
1335 1432 l
1337 1431 l
1339 1429 l
1340 1428 l
1342 1427 l
1344 1425 l
1346 1424 l
1347 1423 l
1349 1421 l
1351 1420 l
1353 1419 l
1354 1417 l
1356 1416 l
1358 1415 l
1360 1413 l
1361 1412 l
1363 1411 l
1365 1409 l
1367 1408 l
1368 1407 l
1370 1405 l
1372 1404 l
1374 1403 l
1375 1401 l
1377 1400 l
1379 1399 l
1380 1398 l
1382 1396 l
1384 1395 l
1386 1394 l
1387 1392 l
1389 1391 l
1391 1390 l
1393 1388 l
1394 1387 l
1396 1386 l
1398 1384 l
1400 1383 l
1401 1382 l
1403 1380 l
1405 1379 l
1407 1378 l
1408 1376 l
1410 1375 l
1412 1374 l
1414 1372 l
1415 1371 l
1417 1370 l
1419 1368 l
1421 1367 l
1422 1366 l
1424 1364 l
1426 1363 l
1428 1362 l
1429 1361 l
1431 1359 l
1433 1358 l
1435 1357 l
1436 1355 l
1438 1354 l
1440 1353 l
1442 1351 l
1443 1350 l
1445 1349 l
1447 1347 l
1449 1346 l
1450 1345 l
1452 1343 l
1454 1342 l
1456 1341 l
1457 1339 l
1459 1338 l
1461 1337 l
1463 1335 l
1464 1334 l
1466 1333 l
1468 1331 l
1469 1330 l
1471 1329 l
1473 1327 l
1475 1326 l
1476 1325 l
1478 1323 l
1480 1322 l
1482 1321 l
1483 1320 l
1485 1318 l
1487 1317 l
1489 1316 l
1490 1314 l
1492 1313 l
1494 1312 l
1496 1310 l
1497 1309 l
1499 1308 l
1501 1306 l
1503 1305 l
1504 1304 l
1506 1302 l
1508 1301 l
1510 1300 l
1511 1298 l
1513 1297 l
1515 1296 l
1517 1294 l
1518 1293 l
1520 1292 l
1522 1290 l
1524 1289 l
1525 1288 l
1527 1286 l
1529 1285 l
1531 1284 l
1532 1283 l
1534 1281 l
1536 1280 l
1538 1279 l
1539 1277 l
1541 1276 l
1543 1275 l
1545 1273 l
1546 1272 l
1548 1271 l
1550 1269 l
1551 1268 l
1553 1267 l
1555 1265 l
1557 1264 l
1558 1263 l
1560 1261 l
1562 1260 l
1564 1259 l
1565 1257 l
1567 1256 l
1569 1255 l
1571 1253 l
1572 1252 l
1574 1251 l
1576 1249 l
1578 1248 l
1579 1247 l
1581 1245 l
1583 1244 l
1585 1243 l
1586 1242 l
1588 1240 l
1590 1239 l
1592 1238 l
1593 1236 l
1595 1235 l
1597 1234 l
1599 1232 l
1600 1231 l
1602 1230 l
1604 1228 l
1606 1227 l
1607 1226 l
1609 1224 l
1611 1223 l
1613 1222 l
1614 1220 l
1616 1219 l
1618 1218 l
1620 1216 l
1621 1215 l
1623 1214 l
1625 1212 l
1627 1211 l
1628 1210 l
1630 1208 l
1632 1207 l
1633 1206 l
1635 1205 l
1637 1203 l
1639 1202 l
1640 1201 l
1642 1199 l
1644 1198 l
1646 1197 l
1647 1195 l
1649 1194 l
1651 1193 l
1653 1191 l
1654 1190 l
1656 1189 l
1658 1187 l
1660 1186 l
1661 1185 l
1663 1183 l
1665 1182 l
1667 1181 l
1668 1179 l
1670 1178 l
1672 1177 l
1674 1175 l
1675 1174 l
1677 1173 l
1679 1171 l
1681 1170 l
1682 1169 l
1684 1167 l
1686 1166 l
1688 1165 l
1689 1164 l
1691 1162 l
1693 1161 l
1695 1160 l
1696 1158 l
1698 1157 l
1700 1156 l
1702 1154 l
1703 1153 l
1705 1152 l
1707 1150 l
1709 1149 l
1710 1148 l
1712 1146 l
1714 1145 l
1715 1144 l
1717 1142 l
1719 1141 l
1721 1140 l
1722 1138 l
1724 1137 l
1726 1136 l
1728 1134 l
1729 1133 l
1731 1132 l
1733 1130 l
1735 1129 l
1736 1128 l
1738 1127 l
1740 1125 l
1742 1124 l
1743 1123 l
1745 1121 l
1747 1120 l
1749 1119 l
1750 1117 l
1752 1116 l
1754 1115 l
1756 1113 l
1757 1112 l
1759 1111 l
1761 1109 l
1763 1108 l
1764 1107 l
1766 1105 l
1768 1104 l
1770 1103 l
1771 1101 l
1773 1100 l
1775 1099 l
1777 1097 l
1778 1096 l
1780 1095 l
1782 1093 l
1784 1092 l
1785 1091 l
1787 1090 l
1789 1088 l
1791 1087 l
1792 1086 l
1794 1084 l
1796 1083 l
1797 1082 l
1799 1080 l
1801 1079 l
1803 1078 l
1804 1076 l
1806 1075 l
1808 1074 l
1810 1072 l
1811 1071 l
1813 1070 l
1815 1068 l
1817 1067 l
1818 1066 l
1820 1064 l
1822 1063 l
1824 1062 l
1825 1060 l
1827 1059 l
1829 1058 l
1831 1056 l
1832 1055 l
1834 1054 l
1836 1052 l
1838 1051 l
1839 1050 l
1841 1049 l
1843 1047 l
1845 1046 l
1846 1045 l
1848 1043 l
1850 1042 l
1852 1041 l
1853 1039 l
1855 1038 l
1857 1037 l
1859 1035 l
1860 1034 l
1862 1033 l
1864 1031 l
1866 1030 l
1867 1029 l
1869 1027 l
1871 1026 l
1873 1025 l
1874 1023 l
1876 1022 l
1878 1021 l
1880 1019 l
1881 1018 l
1883 1017 l
1885 1015 l
1886 1014 l
1888 1013 l
1890 1012 l
1892 1010 l
1893 1009 l
1895 1008 l
1897 1006 l
1899 1005 l
1900 1004 l
1902 1002 l
1904 1001 l
1906 1000 l
1907 998 l
1909 997 l
1911 996 l
1913 994 l
1914 993 l
1916 992 l
1918 990 l
1920 989 l
1921 988 l
1923 986 l
1925 985 l
1927 984 l
1928 982 l
1930 981 l
1932 980 l
1934 978 l
1935 977 l
1937 976 l
1939 974 l
1941 973 l
1942 972 l
1944 971 l
1946 969 l
1948 968 l
1949 967 l
1951 965 l
1953 964 l
1955 963 l
1956 961 l
1958 960 l
1960 959 l
1962 957 l
1963 956 l
1965 955 l
1967 953 l
1968 952 l
1970 951 l
1972 949 l
1974 948 l
1975 947 l
1977 945 l
1979 944 l
1981 943 l
1982 941 l
1984 940 l
1986 939 l
1988 937 l
1989 936 l
1991 935 l
1993 934 l
1995 932 l
1996 931 l
1998 930 l
2000 928 l
2002 927 l
2003 926 l
2005 924 l
2007 923 l
2009 922 l
2010 920 l
2012 919 l
2014 918 l
2016 916 l
2017 915 l
2019 914 l
2021 912 l
2023 911 l
2024 910 l
2026 908 l
2028 907 l
3 sw
st
2028 907 m
2030 906 l
2031 904 l
2033 903 l
2035 902 l
2037 900 l
2038 899 l
2040 898 l
2042 896 l
2044 895 l
2045 894 l
2047 893 l
2049 891 l
2050 890 l
2052 889 l
2054 887 l
2056 886 l
2057 885 l
2059 883 l
2061 882 l
2063 881 l
2064 879 l
2066 878 l
2068 877 l
2070 875 l
2071 874 l
2073 873 l
2075 871 l
2077 870 l
2078 869 l
2080 867 l
2082 866 l
2084 865 l
2085 863 l
2087 862 l
2089 861 l
2091 859 l
2092 858 l
2094 857 l
2096 856 l
2098 854 l
2099 853 l
2101 852 l
2103 850 l
2105 849 l
2106 848 l
2108 846 l
2110 845 l
2112 844 l
2113 842 l
2115 841 l
2117 840 l
2119 838 l
2120 837 l
2122 836 l
2124 834 l
2126 833 l
2127 832 l
2129 830 l
2131 829 l
2132 828 l
2134 826 l
2136 825 l
2138 824 l
2139 822 l
2141 821 l
2143 820 l
2145 819 l
2146 817 l
2148 816 l
2150 815 l
2152 813 l
2153 812 l
2155 811 l
2157 809 l
2159 808 l
2160 807 l
2162 805 l
2164 804 l
2166 803 l
2167 801 l
2169 800 l
2171 799 l
2173 797 l
2174 796 l
2176 795 l
2178 793 l
2180 792 l
2181 791 l
2183 789 l
2185 788 l
2187 787 l
2188 785 l
2190 784 l
2192 783 l
2194 781 l
2195 780 l
2197 779 l
2199 778 l
2201 776 l
2202 775 l
2204 774 l
2206 772 l
2208 771 l
2209 770 l
2211 768 l
2213 767 l
2215 766 l
2216 764 l
2218 763 l
2220 762 l
2221 760 l
2223 759 l
2225 758 l
2227 756 l
2228 755 l
2230 754 l
2232 752 l
2234 751 l
2235 750 l
2237 748 l
2239 747 l
2241 746 l
2242 744 l
2244 743 l
2246 742 l
2248 741 l
2249 739 l
2251 738 l
2253 737 l
2255 735 l
2256 734 l
2258 733 l
2260 731 l
2262 730 l
2263 729 l
2265 727 l
2267 726 l
2269 725 l
2270 723 l
2272 722 l
2274 721 l
2276 719 l
2277 718 l
2279 717 l
2281 715 l
2283 714 l
2284 713 l
2286 711 l
2288 710 l
2290 709 l
2291 707 l
2293 706 l
2295 705 l
2297 703 l
2298 702 l
2300 701 l
2302 700 l
2303 698 l
2305 697 l
2307 696 l
2309 694 l
2310 693 l
2312 692 l
2314 690 l
2316 689 l
2317 688 l
2319 686 l
2321 685 l
2323 684 l
2324 682 l
2326 681 l
2328 680 l
2330 678 l
2331 677 l
2333 676 l
2335 674 l
2337 673 l
2338 672 l
2340 670 l
2342 669 l
2344 668 l
2345 666 l
2347 665 l
2349 664 l
2351 663 l
2352 661 l
2354 660 l
2356 659 l
2358 657 l
2359 656 l
2361 655 l
2363 653 l
2365 652 l
2366 651 l
2368 649 l
2370 648 l
2372 647 l
2373 645 l
2375 644 l
2377 643 l
2379 641 l
2380 640 l
2382 639 l
2384 637 l
2385 636 l
2387 635 l
2389 633 l
2391 632 l
2392 631 l
2394 629 l
2396 628 l
2398 627 l
2399 625 l
2401 624 l
2403 623 l
2405 622 l
2406 620 l
2408 619 l
2410 618 l
2412 616 l
2413 615 l
2415 614 l
2417 612 l
2419 611 l
2420 610 l
2422 608 l
2424 607 l
2426 606 l
2427 604 l
2429 603 l
2431 602 l
2433 600 l
2434 599 l
2436 598 l
2438 596 l
2440 595 l
2441 594 l
2443 592 l
2445 591 l
2447 590 l
2448 588 l
2450 587 l
2452 586 l
2454 585 l
2455 583 l
2457 582 l
2459 581 l
2461 579 l
2462 578 l
2464 577 l
2466 575 l
2467 574 l
2469 573 l
2471 571 l
2473 570 l
2474 569 l
2476 567 l
2478 566 l
2480 565 l
2481 563 l
2483 562 l
2485 561 l
2487 559 l
2488 558 l
2490 557 l
2492 555 l
2494 554 l
2495 553 l
2497 551 l
2499 550 l
2501 549 l
2502 548 l
2504 546 l
2506 545 l
2508 544 l
2509 542 l
2511 541 l
2513 540 l
2515 538 l
2516 537 l
2518 536 l
2520 534 l
2522 533 l
2523 532 l
2525 530 l
2527 529 l
2529 528 l
2530 526 l
2532 525 l
2534 524 l
2536 522 l
2537 521 l
2539 520 l
2541 518 l
2543 517 l
2544 516 l
2546 514 l
2548 513 l
2549 512 l
2551 510 l
st
gr
2360 92 m
2645 92 l
2645 219 l
2360 219 l
cp
gs
1 1 1 rgb
eofi
gr
3 sw
st
gs
gs
gr
gs
2445 141 m
2487 183 l
st
2487 141 m
2445 183 l
st
gr
1 -1 sc
/MC1_Arial 84 self 2560 -190 m
( )[23 ] xs
1 -1 sc
1 -1 sc
2583 -190 m
(t)[23 ] xs
1 -1 sc
1 -1 sc
/MC1_Arial 50 self 2606 -149 m
(2)[28 ] xs
1 -1 sc
gr
gs
gs
1 -1 sc
354 -1277 tr
90 ro
/MC2_Arial 91 self 0 0 m
(t)[25 ] xs
1 -1 sc
gr
gs
1 -1 sc
309 -1252 tr
90 ro
/MC2_Arial 55 self 0 0 m
(2)[31 ] xs
1 -1 sc
gr
gs
1 -1 sc
354 -1221 tr
90 ro
/MC2_Arial 91 self 0 0 m
( \(s)[25 30 46 ] xs
1 -1 sc
gr
gs
1 -1 sc
309 -1120 tr
90 ro
/MC2_Arial 55 self 0 0 m
(2)[31 ] xs
1 -1 sc
gr
gs
1 -1 sc
354 -1089 tr
90 ro
/MC2_Arial 91 self 0 0 m
(\))[30 ] xs
1 -1 sc
gr
gr
gs
1 -1 sc
/MC1_Arial 91 self 1515 -2322 m
(x)[45 ] xs
1 -1 sc
1 -1 sc
/MC1_Arial 55 self 1560 -2277 m
(2)[31 ] xs
1 -1 sc
1 -1 sc
1560 -2354 m
(i)[11 ] xs
1 -1 sc
1 -1 sc
/MC1_Arial 91 self 1591 -2322 m
( \(cm)[25 30 46 76 ] xs
1 -1 sc
1 -1 sc
/MC1_Arial 55 self 1768 -2277 m
(2)[31 ] xs
1 -1 sc
1 -1 sc
/MC1_Arial 91 self 1799 -2322 m
(\))[30 ] xs
1 -1 sc
gr
gr
Save0 restore end
showpage
%%EOF
